============================================================================================================================================================
                                            MVP - 1 | High Level Design 
============================================================================================================================================================

• Modular Monolith

• Connector module:

    - C++ boost WebSockets
    - Отдельный поток --> добавляющий евенты в различные MPSC_LockFree_Queue

• Несколько колец (2-4) для различных бирж

    - Все Enten-ы от данной биржы должы приходить только в это кольцо (MPSC_LockFree_Queue)
    - Каждое такое кольцо живёт в отдельном Thread-e
    - В этом же Thread-e живет OrderBook-и для всех Бирж что публикуются в данное кольцо

============================================================================================================================================================
                                            Plan
============================================================================================================================================================

• Посмотреть есть ли аналоги для 'lightweight static string'

• GateIO

    - Сделать WS-Connector к GateIO
    - Написать JSON Parser для данных из GateIO
    - Channel:  
        - spot.order_book_update

• Нужно просвести анализ 'Marker Data'
    
    - Какие данные вообще мне нужны
    - Сделать какое-то общение представление DTO при получении этих данных из разных Exchangе-s

============================================================================================================================================================
                                            Модули
============================================================================================================================================================    

• Rest API client:

    - Сделать/Модифицировать/Отменить Order
    - Запросить текущий Snapshot - OrderBook-a

• Database:

    - Store 'HistoricalData'
    - Store 'Orders' (и в целом позиции)

• Logger:

    - SpdLog ???


• Configuration


============================================================================================================================================================
                                            Optimisations
============================================================================================================================================================

• Pair - Symbol:  

    - Размер скорее всего небольшой даже меньше SSO std::string

    - Сделать 'static string' ??? (as static lightweight string>

    - Pair [usdtbtc] --> uint64_t  [так как длина 'usdtbtc' максимум 8 байт]
      Возможно использовать SIMD для корвертации в INT


add_compile_options(-c -Wall -Werror -Wextra -O3 -std=c++2a)